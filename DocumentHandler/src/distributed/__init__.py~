import sys
import os

sys.path.append(os.path.join(os.path.dirname(__file__), '../..', 'src'))
from util import *

from mpi4py import MPI
from time import time

def split_workload(workload, n_workers):
    len_workload = len(workload)
    workload_split_size = len_workload / n_workers
    remainder_workload = len_workload % n_workers
    splited_workload = []

    for i in range(0, n_workers):
        
        if i < remainder_workload:
            begin = workload_split_size*i + i
        else:
            begin = workload_split_size*i + remainder_workload

        if i < remainder_workload: 
            end = begin + workload_split_size + 1
        else:
            end = begin + workload_split_size

        splited_workload.append(workload[begin:end])

    return splited_workload

def run_master(database_name, n_workers):
    
	start_time = time()
    splited_workload = []

    # List files in database
    file_names = list_dir(database_name + "/pickled/", "*.pkl")

    pairs = []
    similaritys = {}

    for i in range(0, len(file_names)):
        for j in range(i+1, len(file_names)):
            # Get the words
	        pairs.append((file_names.__getitem__(i), file_names.__getitem__(j)))
    
    splited_workload = split_workload(pairs, n_workers)
	for i in range(0, n_workers)
		send()	

    end_time = time()
    spent_time = (end_time - start_time)

    time_string = "Spend time: %0.4f s\n" % spent_time

#    output_string = header_string + time_string + output_string
    return None

def run_worker():
	return None
